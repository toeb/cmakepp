function(promise_execute)
  execute(${ARGN} --async)
  ans(process_handle)
  promise_then_anonymous(""
    ()
    process_isrunning("${process_handle}")
    ans(still_running)
    message("${process_handle} - ${still_running}")

    if(still_running)
      map_tryget("\${task}" task_queue)
      ans(task_queue)
      task_queue_push("\${task_queue}" "\${task}")
      task_yield()
    endif()
    return("${process_handle}")
    )
  return_ans()
endfunction()


macro(task_yield)
  address_new()

  eval("macro(task_yield) \n message(yielding) \n set(__ans ${__ans}) \n _return()\n endmacro()")
  task_yield()
endmacro()
function(task_yield_token)
 task_yield()
endfunction()

function(promise_then_execute promise)
  promise_then_anonymous(${promise} ()  promise_execute(${ARGN}) return_ans())
  return_ans()
endfunction()